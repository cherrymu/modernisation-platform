---
owner_slack: "#modernisation-platform"
title: Deleting an environment (AWS account)
last_reviewed_on: 2024-03-12
review_in: 6 month
---

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NXTCMQ7ZX6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-NXTCMQ7ZX6');
</script>

# <%= current_page.data.title %>

> Note: This process cannot be undone. All resources in an AWS account will be deleted.

> You will need to **complete the actions** below in as **short a time frame as possible**. Certain workflows such as [Terraform: New environment](https://github.com/ministryofjustice/modernisation-platform/blob/main/.github/workflows/new-environment.yml) will re-create accounts/workspaces which you are trying to delete if it runs mid-way through your progress. Ideally warn the MP team **not to merge any PRs** whilst you carry out these actions.

In the Modernisation Platform, we run a pipeline to create AWS accounts using the `aws_organizations_account` Terraform resource.

The `aws_organizations_account` cannot, and does not, delete AWS accounts if removed from the configuration. It attempts to move the AWS account from AWS Organizations to a standalone account, which should fail.

Therefore, there are a few things to do to delete an environment, in this order:

1. Get the AWS accounts root IAM user's email address
1. Remove the environment definition from `environments/*.json`
1. Remove the AWS account from Modernisation Platform management
1. Delete the `terraform workspace` wherever it appears
1. Delete the actual AWS account

## Getting the root IAM user's email address

You need the root IAM user's email address to delete the AWS account in the last step, so note it down.

You can get this from the SSO log on page if you have access to the account via SSO, if not it can be found in the Terraform state.

To do this, `cd` into `terraform environments` and find the resource in the state:

- `cd terraform/environments`
- Use [temporary AWS Credentials](https://user-guide.modernisation-platform.service.justice.gov.uk/user-guide/getting-aws-credentials.html#getting-aws-credentials) or [AWS-Vault](https://github.com/99designs/aws-vault) to source the **Modernisation Platform** credentials in your terminal
- `terraform init`
- `terraform state list`

To find the email address, run:

- `terraform state show <resource reference>`

```bash
$ cd terraform/environments
$ terraform state list
$ terraform state show 'module.environments.aws_organizations_account.accounts["core-vpc-non-live-data"]'

resource "aws_organizations_account" "accounts" {
    ...
    email                      = "..." <- This will be the email address for the root IAM user
    ...
    tags                       = {
        "application"      = "modernisation-platform"
        "business-unit"    = "Platforms"
        "environment-name" = "production"
        "is-production"    = "true"
        "owner"            = "Modernisation Platform: modernisation-platform@digital.justice.gov.uk"
    }
}
```

## Running bash scripts

We have bash scripts that,

1. Remove the AWS account from Modernisation Platform management
2. Remove the environment definition
3. Delete Terraform resources for the environment
4. Delete Terraform workspaces for the environment (This will not delete the resources that are set up by the Terraform configuration. It will only delete the Terraform reference to the workspace. You will need to delete the AWS account properly.)
5. Remove Environment Files (*only if removing all environments for an application)

Be aware that some resources such as s3 buckets cannot be destroyed until you manually empty all the objects and versions in them.

- Go to the [account-deletion folder ](https://github.com/ministryofjustice/modernisation-platform/tree/feature/6457-account-delete-combo/scripts/account-deletion) and create a config.txt file
- Copy the content in [example-config.txt](https://github.com/ministryofjustice/modernisation-platform/blob/feature/6457-account-delete-combo/scripts/account-deletion/example-config.txt) and paste it into your config.txt file
- Fill in the the variables specific to your deletion task
- In your terminal, ensure you are in the account-deletion directory
- Make the script executable by running the command, `chmod +x config-text`
- Run the script `./config-text`

When scripts are running, you it will get prompts asking for your approval to proceed with delete operations

## Move the account to the root organizational unit

> Note that a user with root account permissions will need to do this.

This is to move the account out of an organizational unit where there is an SCP preventing any actions by the root user.

Log into the AWS Console and navigate to AWS Organizations, find the account and move it to the `root` OU.

Now the AWS account can be deleted.

## Delete the actual AWS account

> This process cannot be undone. Proceed carefully.

Follow the [AWS documentation on closing an AWS account](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/close-account.html#closing-the-account).

You will need access to the [AWS - notifications](https://groups.google.com/a/digital.justice.gov.uk/g/aws) Google Group which will receive the password reset email.

## Move the account to the closed accounts organizational unit

> Note that a user with root account permissions will need to do this. Please post in #ask-operations-engineering about it, or message the MP teams TA/Lead Webops Engineer.

Log into the AWS Console and navigate to AWS Oraganizations, find the account and move it to the `Closed accounts` OU.

## Merge in your file changes

Raise a PR to merge in your file changes which will trigger Terraform to perform the remaining clean up needed.

## Delete Github environments

Navigate to [https://github.com/ministryofjustice/modernisation-platform-environments/settings/environments](https://github.com/ministryofjustice/modernisation-platform-environments/settings/environments) and delete the relevant GitHub environments.

Check for any automated PRs that have been raised in the MP Environments repo to update the `.github/CODEOWNERS` file. Here is an [example PR](https://github.com/ministryofjustice/modernisation-platform-environments/pull/5317/files). These will need to be merged in.
